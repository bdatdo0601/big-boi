enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

type Post @model @key(name: "byUpdatedAt", fields: ["status", "updatedAt"], queryField: "PostByUpdatedAt")  @auth(
    rules: [
      { allow: owner }, # owner can update, delete, and read
      { allow: private, operations: [read] }, # signed in users who are not the owner can read
      { allow: public, operations: [read] } # unauthenticated users can read
    ]
  ) {
  id: ID!
  title: String!
  description: String
  status: PostStatus!
  tags: [String]
  data: AWSJSON!
  updatedAt: AWSDateTime!
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type Comment @model @key(name: "byPost", fields: ["postID", "content"]) @auth(
    rules: [
      { allow: owner }, # owner can update, delete, and read
      { allow: private, operations: [read] }, # signed in users who are not the owner can read
      { allow: public, operations: [read] } # unauthenticated users can read
    ]
  ) {
  id: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  content: String!
}

# TODO: improve message details
type EventMessage @model @key(name: "byTimestamp", fields: ["type", "timestamp"], queryField: "EventMessageByTimestamp") @auth(
  rules: [
      { allow: owner }, # owner can update, delete, and read
      { allow: private, operations: [read, create] }, # signed in users who are not the owner can read write
      { allow: public, operations: [read, create] } # unauthenticated users can read
    ]
) {
  id: ID!
  type: String!
  sourceID: String!
  source: String!
  eventType: String!
  content: AWSJSON!
  metadata: AWSJSON!
  publishInfo: AWSJSON!
  timestamp: AWSDateTime!
}